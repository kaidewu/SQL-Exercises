PROCEDURE SYNTAX:
	*(Si usamos aqui USE database tendremos que usar ';')
	DELIMITER $$
	*(Si usamos aqui USE database tendremos que usar '$$')
	CREATE PROCEDURE procedimiento_nombre()
		BEGIN
			sentencias;
	    END $$
	DELIMITER; #Muy importante recuperar el DELIMITER
---------------------------------------------------------
TRIGGER SYNTAX:
	CREATE TRIGGER nombre_del_treigger
		TRIGGER_TIME* TRIGGER_EVENT* ON nombre_de_tabla
	    FOR EACH ROW
		[TRIGGER_ORDER*]
		TREIGGER_BODY
	*TIME = BEFORE|AFTER
	*EVENT = INSERT|UPDATE|DELETE
	*ORDER = FOLLOWS|PRECEDES

-DELETE[old.cosas]
-UPDATE[new.cosas y old.cosas]
-INSERT[new.cosas]
*Nota:
-AUTO_INCREMENT para incrementar, por ejemplo el ID.
---------------------------------------------------------
BUCLES SYNTAX:
	REPEAT accion UNTIL condicion END REPEAT;
	WHILE condicion DO accion END WHILE;
---------------------------------------------------------
Indices:
	CREATE [UNIQUE] INDEX nombre ON nombretabla(nombrecolumna[opcional]); /*Para crear un indice*/
	DROP INDEX nombre ON nombretabla; /*Para eliminar el indice que hemos creado*/
	SHOW INDEX FROM nombretabla;
---------------------------------------------------------
Plan de ejecucion:
	Estimated execution cost.
	Estimated number of returned rows.
	Time to return first row.
	Time to return all rows (actual cost), in milliseconds.
	Number of rows returned by the iterator.
	Number of loops.
---------------------------------------------------------
AUTOCOMMIT
Para desactivar el autocommit es: 'SET autocommit = 0;' o 'SET autocommit = off;'
Y para activar el autocommit es: 'SET autocommit = 1;' o 'SET autocommit = on;'
Funciona como un checkpoint, por ejemplo:
Desactivado: Creo una tabla 'CREATE TABLE prueba (id INT);' y pongo un 'COMMIT;'. Despues a√±ado valores a la tabla 'INSERTO INTO prueba VALUES(1);', y si hago un 'ROLLBACK;', me devuelve al punto de donde estaba antes de poner un 'COMMIT;'.
Tambien si esta desactivado el autocommit, solo se podra ver las modificaciones el que este en esa session, es decir, si otro usuario se conecta no podra ver las modificaciones que ha realizado el usuario con el autocommit desactivado.
Pero si el usuario hace el comando 'COMMIT;' se podra ver las modificaciones hechos.
---------------------------------------------------------
Comprovacion de Errores
DECLARE "EXIT|CONTINUE" HANDLER FOR "SQL Error"
	[DECLARACION]
Si tiene mas de una declaracion:
DECLARE "EXIT|CONTINUE" HANDLER FOR "SQL Error"
	BEGIN
		[DECLARACION]
	END;
---------------------------------------------------------
